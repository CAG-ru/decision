import re
from decimal import Decimal

def normalize_money_add(text):
    text = str(text)
    money_re = re.compile('^\d[\d\s\.\,]+\d')
    match = money_re.search(text)
    if match:
        money_str = match.group(0)
        money_str = re.sub(r'\s', '', money_str)
        money_str = re.sub(',', '.', money_str)
        return Decimal(money_str)
    return Decimal(0)

def normalize_money(text):
    text = str(text)
    if text and re.sub(r'[^\d.]', '', text):
        return Decimal(re.sub(r'[^\d.]', '', text))
    return Decimal(0)

def normalize_money_desc(text):
    text = str(text)
    return re.sub(r'\)|\(', '', text)

def calc_money_diff(pd_row):
    money_add = normalize_money_add(pd_row[5])
    money_dec = normalize_money(pd_row[4])
    return money_dec - money_add

def shorten_name(long_name):
   ministries_short_name = {
       'Министерство внутренних дел РФ': 'МВД России',
       'Министерство экономического развития РФ': 'Минэкономразвития России',
       'Министерство финансов РФ': 'Минфин России',
       'Министерство промышленности и торговли РФ': 'Минпромторг России',
       'Министерство энергетики РФ': 'Минэнерго России',
       'Министерство здравоохранения РФ ': 'Минздрав России',
       'Министерство сельского хозяйства РФ': 'Минсельхоз России',
       'Министерство транспорта РФ': 'Минтранс России',
       'Министерство Российской Федерации по развитию Дальнего Востока и Арктики': 'Минвостокразвития России',
       'Министерство Российской Федерации по развитию Дальнего Востока и Арктики (Минвостокразвития России)': 'Минвостокразвития России',
       'Министерство цифрового развития, связи и массовых коммуникаций Российской Федерации': 'Минцифры России',
       'Министерство культуры РФ': 'Минкультуры России',
       'Министерство природных ресурсов и экологии РФ': 'Минприроды России',
       'Министерство труда и социальной защиты РФ': 'Минтруд России',
       'Министерство спорта РФ': 'Минспорт России',
       'Министерство строительства и жилищно-коммунального хозяйства РФ': 'Минстрой России',
       'Министерство юстиции РФ': 'Минюст России',
       'Министерство науки и высшего образования РФ': 'Минобрнауки России',
       'Министерство иностранных дел РФ': 'МИД России',
       'Министерство просвещения РФ': 'Минпросвещения России',
       'Министерство здравоохранения РФ': 'Минздрав России'
    }  
   return ministries_short_name.get(long_name, long_name)

#стандартизированные названия
positions_dict = {
    'заместительдиректорадепартамента': 'заместитель директора департамента',
    'заместител[ья]директора*': 'заместитель директора департамента',
    r'зам\w*(руководител[ья]|начальника*)\w*отдела': {'департамент': 'заместитель начальника отдела в департаменте', r'.' : 'заместитель начальника отдела'},
    'заместительначальника': 'заместитель начальника отдела',
    r'(руководител[ья]|начальника*)\w*отдела': {'департамент': 'начальник отдела в департаменте', r'.': 'начальник отдела'},
    r'зам\w*(руководител[ья]|начальника*|директора*)': 'заместитель директора департамента',
    r'(руководител[ья]|начальника*|директора*)': 'директор департамента',
    r'первыйзаместитель\w*министра': 'первый заместитель федерального министра',
    r'заместитель\w*министра': 'заместитель федерального министра',
    r'помощник\w*министра': 'помощник федерального министра',
    r'советник\w*министра': 'советник федерального министра',
    r'(руководител[ья]|начальника*|директорa*)\w*аппарата': 'руководитель аппарата федерального министра',
    r'заместител[ья](руководител[ья]|начальника*|директорa*)\wаппарата': 'заместитель руководителя аппарата федерального министра',
    r'(руководител[ья]|начальника*|директорa*)\w*территориальногоуправления': 'руководитель территориального управления',
    r'заместител[ья](руководител[ья]|начальника*|директорa*)\w*территориальногоуправления': 'заместитель руководителя территориального управления',
    'референт':'референт',
    'советник': 'советник',
    'главныйспециалист': 'главный специалист-эксперт',
    'ведущийсоветник': 'ведущий советник',
    'консультант': 'консультант',
    'ведущийспециалист2разряда': 'ведущий специалист 2 разряда',
    'ведущийконсультант': 'ведущий консультант',
    'специалист1разряда': 'специалист 1 разряда',
    'ведущийспециалистэксперт': 'ведущий специалист-эксперт',
    'старшийспециалист1разряда': 'старший специалист 1 разряда',
    'старшийспециалист2разряда': 'старший специалист 2 разряда',
    'старшийспециалист3разряда': 'старший специалист 3 разряда',
    'специалист2разряда': 'специалист 2 разряда',
    'специалистэксперт': 'специалист-эксперт'
    }

#категории
category_dict = {
    'начальник отдела' : 'руководители / специалисты',
    'начальник отдела в департаменте' : 'руководители / специалисты',
    'заместитель директора департамента' : 'руководители',
    'референт' : 'специалисты',
    'референт департамента': 'специалисты',
    'референт отдела': 'специалисты',
    'директор департамента' : 'руководители',
    'заместитель начальника отдела' : 'руководители / специалисты',
    'заместитель начальника отдела в департаменте' : 'руководители / специалисты',
    'заместитель федерального министра' : 'руководители',
    'консультант' : 'специалисты',
    'помощник федерального министра' : 'помощники (советники)',
    'советник федерального министра' : 'помощники (советники)',
    'ведущий советник' : 'специалисты',
    'советник' : 'специалисты',
    'главный специалист-эксперт' : 'специалисты',
    'ведущий консультант' : 'специалисты',
    'ведущий специалист-эксперт' : 'специалисты',
    'первый заместитель федерального министра' : 'руководители',
    'специалист-эксперт' : 'специалисты',
    'специалист 1 разряда' : 'обеспечивающие специалисты',
    'ведущий специалист 2 разряда' : 'обеспечивающие специалисты',
    'старший специалист 1 разряда' : 'обеспечивающие специалисты',
    'специалист 2 разряда' : 'обеспечивающие специалисты', 
    'заместитель руководителя аппарата федерального министра' : 'руководители',
    'старший специалист 3 разряда' : 'обеспечивающие специалисты',
    'руководитель аппарата федерального министра' : 'руководители',
    'руководитель аппарата' : 'руководители'}

#группы
group_dict = {
    'ведущий советник' : 'ведущая',
    'советник' : 'ведущая',
    'консультант' : 'ведущая',
    'ведущий специалист 2 разряда' : 'ведущая',
    'ведущий консультант' : 'ведущая',
    'главный специалист-эксперт' : 'старшая',
    'специалист 1 разряда' : 'старшая',
    'ведущий специалист-эксперт' : 'старшая',
    'старший специалист 1 разряда' : 'старшая',
    'специалист-эксперт' : 'старшая',
    'старший специалист 3 разряда' : 'старшая',
    'первый заместитель федерального министра' : 'высшая',
    'заместитель федерального министра' : 'высшая',
    'помощник федерального министра' : 'высшая',
    'советник федерального министра' : 'высшая',
    'директор департамента' : 'высшая',
    'заместитель директора департамента' : 'высшая',
    'руководитель аппарата федерального министра' : 'высшая',
    'заместитель руководителя аппарата федерального министра' : 'высшая',
    'референт' : 'главная',
    'начальник отдела' : 'главная',
    'начальник отдела в департаменте': 'главная',
    'заместитель начальника отдела' : 'главная / ведущая',
    'заместитель начальника отдела в департаменте' : 'главная / ведущая',
    'специалист 2 разряда' : 'младшая'    
}

def find_category(name):
    return find_category_impl(positions_dict, name)
      

def find_category_impl(dictionary, name):
    name_key = re.sub(r'[^\w|\d]', '', name.lower())

    for key, value in dictionary.items():
      if re.search(key, name_key):

        if type(value) == dict:
          return find_category_impl(value, name)

        else:
          return value

    else:
        return None

